version: '3.9'

services:
  font-scanner:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: font-scanner-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PUPPETEER_HEADLESS=true
      - PUPPETEER_TIMEOUT=${PUPPETEER_TIMEOUT:-30000}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - REPORTS_DIR=/app/reports
      - REPORTS_RETENTION_DAYS=${REPORTS_RETENTION_DAYS:-7}
      - MAX_PAGES_TO_SCAN=${MAX_PAGES_TO_SCAN:-10}
      - SCAN_TIMEOUT=${SCAN_TIMEOUT:-60000}
    volumes:
      - reports-data:/app/reports
      - logs-data:/app/logs
    networks:
      - font-scanner-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
      - NET_BIND_SERVICE
    read_only: false
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

volumes:
  reports-data:
    driver: local
  logs-data:
    driver: local

networks:
  font-scanner-network:
    driver: bridge
